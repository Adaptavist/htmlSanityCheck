// gradle build script for html sanity check
// =========================================

apply plugin: 'java'
apply plugin: 'groovy'

apply plugin: 'org.asciidoctor.gradle.asciidoctor'

apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/code-quality.gradle'

apply from: 'gradle/publishing.gradle'
apply plugin: 'maven'


repositories {
    jcenter()
    mavenCentral()
    maven {url "http://oss.sonatype.org/content/repositories/snapshots/"}
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath gradleApi()
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.0'
        classpath "org.codenarc:CodeNarc:0.17"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'

 
        //classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
        classpath "nu.studer:gradle-plugindev-plugin:1.0.3"
        classpath "nu.studer:gradle-credentials-plugin:1.0.1"
    }
}

dependencies {
    compile gradleApi()

    // need to have groovy compatible to spockframework
    compile 'org.codehaus.groovy:groovy-all:2.3.6'

    // jsoup is our awesome html parser, see jsoup.org
    compile 'org.jsoup:jsoup:1.7.3'
    
    testCompile 'junit:junit:4.11'

    // mockito needed to test string similarity
    testCompile "org.mockito:mockito-all:1.9.5"

    // Spockframework for BDD (specification-based testing)
    testCompile("org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

// local repo for testing purposes...
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}


// ###############################
//
// AsciiDoc stuff
//
// ###############################

// location of AsciiDoc files
def asciidocSrcPath = "$projectDir/docs"

// location of images used in AsciiDoc documentation
def srcImagesPath = "$asciidocSrcPath/images"

// results of asciidoc compilitation (HTML) is stored
def outputPath = "$buildDir/docs"

// where HTMLSanityCheck checkingresults ares stored
def reportPath = "$buildDir/report/"




// the files we process
def hsc_arc42 = asciidocSrcPath + "/hsc_arc42.adoc"
def hsc_devguide = asciidocSrcPath + "/DevelopmentGuide.adoc"
def hsc_index = asciidocSrcPath + "/index.adoc"


asciidoctor {
    outputDir = new File(outputPath)
    sourceDir = file( asciidocSrcPath )
    sourceDocumentNames = files(  new File( hsc_arc42),
                                  new File( hsc_devguide),
                                  new File( hsc_index) )

        options = [
        attributes: [
            backend     : 'html5',
            doctype     : 'book',
            icons       : 'font',
            sectlink    : true,
            sectanchors : true
        ]
    ]
}


defaultTasks 'arc42'

task copyImages(
    type: Copy,
    description: 'copy images into build output folder'
) {
    from srcImagesPath
    into outputPath +'/images/'
    include( '**/*.jpg', '**/*.png', '**/*.svg')
}



task arc42(
    dependsOn: [copyImages, asciidoctor],
    description: 'collects all required tasks for creating arc42 documentation'
) << { }


/*
 * Copyright 2012-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
