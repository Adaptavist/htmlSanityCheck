// gradle build script for html sanity check
// =========================================
group = 'org.aim42'
version = '0.2.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'


repositories {
    jcenter()
    mavenCentral()
}


dependencies {
    compile gradleApi()
    compile localGroovy()

    // jsoup is our awesome html parser, see jsoup.org
    compile 'org.jsoup:jsoup:1.7.3'

    testCompile 'junit:junit:4.11'

    // mockito needed to test string similarity
    testCompile "org.mockito:mockito-all:1.9.5"

}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.0'
    }

}

uploadArchives.dependsOn clean

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('../repo'))
        }
    }
}


// ###############################
//
// AsciiDoc stuff
//
// ###############################

// location of AsciiDoc files
def asciidocSrcPath = "$projectDir/docs"

// location of images used in AsciiDoc documentation
def srcImagesPath = "$asciidocSrcPath/images"

// results of asciidoc compilitation (HTML) is stored
def outputPath = "$buildDir/docs"

// where HTMLSanityCheck checkingresults ares stored
def reportPath = "$buildDir/report/"


task info(
    description: "info on several paths"
  ) <<
{
  println "project.name = " + project.name
  println "projectDir = " + projectDir
  println "buildDir = " + buildDir
  println "="*50
  println "asciidoc src files: " + asciidocSrcPath
  println "source images: " + srcImagesPath
  println "asciidoc output: " + outputPath
  println "reportPath = " + reportPath
}


apply plugin: 'org.asciidoctor.gradle.asciidoctor'

// the files we process
def hsc_arc42 = asciidocSrcPath + "/hsc_arc42.adoc"
def hsc_devguide = asciidocSrcPath + "/DevelopmentGuide.adoc"
def hsc_index = asciidocSrcPath + "/index.adoc"


asciidoctor {
    outputDir = new File(outputPath)
    sourceDir = file( asciidocSrcPath )
    sourceDocumentNames = files(  new File( hsc_arc42),
                                  new File( hsc_devguide),
                                  new File( hsc_index) )

        options = [
        attributes: [
            backend     : 'html5',
            toc         : 'left',
            doctype     : 'book',
            icons       : 'font',
            sectlink    : true,
            sectanchors : true
        ]
    ]
}


defaultTasks 'arc42'

task copyImages(
    type: Copy,
    description: 'copy images into build output folder'
) {
    from srcImagesPath
    into outputPath +'/images/'
    include( '**/*.jpg', '**/*.png', '**/*.svg')
}



task arc42(
    dependsOn: [copyImages, asciidoctor],
    description: 'collects all required tasks for creating arc42 documentation'
) << { }



/*
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
